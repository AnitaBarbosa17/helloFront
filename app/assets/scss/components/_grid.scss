/** ======================================
 * Component : Grid
 * ======================================= */

.grid {
  display: flex;
  flex-wrap: wrap;

  @media (min-width: $mq-S-up) {
    margin-left: -$gutter-width;

    > * {
      margin-left: $gutter-width;
    }
  }

  &:not(.grid--fixed) {
    @media (max-width: $mq-S) {
      > * {
        width: 100%;
      }
    }
  }
}


/**
 * Grid child options
 * --------------------------------------- */

.grid-itemFirst {
  order: -1;
}

.grid-push {
  margin-left: auto;
}

.grid-itemBig {
  flex-grow: 1;
}

/*  Grid child custom size  */

@each $width in $width-list {
  $prefix: nth($width, 1);
  $size: nth($width, 2);

  .grid-w#{$prefix} {
    width: calc(#{$size} - #{$gutter-width});
  }
}

/**
 * Modifier : column
 * --------------------------------------- */

@media (min-width: $mq-S-up) {
  .grid--4 {
    > * {
      width: calc(25% - #{$gutter-width});
    }

    &.grid-itemDouble {
      width: calc(50% - #{$gutter-width});
    }
  }

  .grid--3 > * {
    width: calc(33.333% - #{$gutter-width});
  }

  .grid--2 > * {
    width: calc(50% - #{$gutter-width});
  }

  .grid--3-1 > {
    :nth-child(2n+1) {
      width: calc(75% - #{$gutter-width});
    }

    :nth-child(2n+2) {
      width: calc(25% - #{$gutter-width});
    }
  }

  .grid--1-3 > {
    :nth-child(2n+1) {
      width: calc(25% - #{$gutter-width});
    }

    :nth-child(2n+2) {
      width: calc(75% - #{$gutter-width});
    }
  }

  .grid--2-1 > {
    :nth-child(2n+1) {
      width: calc(66.666% - #{$gutter-width});
    }

    :nth-child(2n+2) {
      width: calc(33.333% - #{$gutter-width});
    }
  }

  .grid--1-2 > {
    :nth-child(2n+1) {
      width: calc(33.333% - #{$gutter-width});
    }

    :nth-child(2n+2) {
      width: calc(66.666% - #{$gutter-width});
    }
  }
}

@media (max-width: $mq-M) and (min-width: $mq-S-up) {
  .grid--m3 > *:nth-child(1n+1) {
    width: calc(33.333% - #{$gutter-width});
  }

  .grid--m2 > *:nth-child(1n+1) {
    width: calc(50% - #{$gutter-width});
  }

  .grid--m1 > *:nth-child(1n+1) {
    width: calc(100% - #{$gutter-width});
  }
}

/**
 * Modifier : grid option
 * --------------------------------------- */

.grid--itemsBig > * {
  flex-grow: 1;
}

.grid--horizontalCenter {
  justify-content: center;
}

/**
 * Modifier : fixed custom grid
 * --------------------------------------- */

.grid--fixed {
  margin-left: -$gutter-width;

  > * {
    margin-left: $gutter-width;
  }
}
